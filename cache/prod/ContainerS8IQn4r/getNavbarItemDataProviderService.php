<?php

namespace ContainerS8IQn4r;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNavbarItemDataProviderService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Navbar\DataProvider\NavbarItemDataProvider' shared autowired service.
     *
     * @return \App\Navbar\DataProvider\NavbarItemDataProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/DataProvider/RestrictedDataProviderInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Navbar/DataProvider/NavbarItemDataProvider.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/NavigationProviderInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Navbar/LegacyHandler/NavbarHandler.php';

        return $container->privates['App\\Navbar\\DataProvider\\NavbarItemDataProvider'] = new \App\Navbar\DataProvider\NavbarItemDataProvider(new \App\Navbar\LegacyHandler\NavbarHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'LEGACYSESSID', 'PHPSESSID', ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ?? ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] = new \App\Engine\LegacyHandler\LegacyScopeState())), $container->parameters['legacy.menu_item_map'], ($container->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] ?? $container->getModuleNameMapperHandlerService()), ($container->privates['App\\Routes\\LegacyHandler\\RouteConverterHandler'] ?? $container->getRouteConverterHandlerService()), ($container->privates['App\\Module\\LegacyHandler\\ModuleRegistryHandler'] ?? $container->load('getModuleRegistryHandlerService')), ($container->services['session'] ?? $container->getSessionService())), ($container->privates['security.helper'] ?? $container->load('getSecurity_HelperService')));
    }
}
